name: Update iKuai CN IP List

on:
  schedule:
    - cron: '0 0/6 * * *'  # 每 6 小时运行一次（UTC 时间）
  workflow_dispatch:       # 允许手动触发

jobs:
  update-ip:
    runs-on: ubuntu-latest

    steps:
      # 1. 检出代码（使用 PAT 权限）
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          persist-credentials: true  # 保留凭证以便后续 git push

      # 2. 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3. 安装依赖
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install requests  # 脚本依赖 requests 库

      # 4. 运行脚本生成 IP 列表文件
      - name: Run ikai script
        run: python ikai_cni_p.py

      # 5. 检查文件是否生成且有变更
      - name: Check for changes
        id: check_changes
        run: |
          # 验证目标文件存在
          if [ ! -f "ikuai_cn_ipgroup.txt" ]; then
            echo "Error: 未生成 ikuai_cn_ipgroup.txt 文件"
            exit 1
          fi
          # 检查是否有变更
          if git diff --quiet ikuai_cn_ipgroup.txt; then
            echo "has_changes=false" >> $GITHUB_ENV
          else
            echo "has_changes=true" >> $GITHUB_ENV
          fi

      # 6. 提交并推送变更（仅当有更新时）
      - name: Commit and push updates
        if: env.has_changes == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add ikuai_cn_ipgroup.txt
          git commit -m "🤖 Auto-update CN IP list (${{ github.run_started_at }})"
          git push origin main  # 确保分支名称与实际仓库主分支一致

      # 7. 可选：清理旧工作流记录（保留最近 10 条）
      - name: Clean up old workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.repository }}
          keep_minimum_runs: 10
          workflow_id: "Update iKuai CN IP List"  # 需与工作流名称一致
